== COURT TERME ==

~ Intégrer l'ECS (la logique de base de l'ECS qui fait que les entités ne sont plus que des objets qui ont la référence de leurs components, mais les components ont une logique interne, donc pas un système aussi poussé que celui de FLECS, plus à la Unity)
	- Faire la structure de base des classes Entity & Component - fait
	- Modifier Game & Scene pour qu'ils puissent accueuillir des Entity - fait
	- Placer le rendering de mesh dans un component - fait
	- Placer les lumières dans des components - fait
	- Faire marcher cette base là (désactiver collision, audio & hud) avec le projet sandbox - fait
	- Rework la camera et faire marcher ça en component - fait
	- Intégrer le hud (sprite & texte) proprement dans la logique de component - fait
	- Intégrer l'audio proprement dans la logique de component - fait
	- Intégrer la physique proprement dans la logique de component - fait
	- Faire marcher tout ça bien toujours avec le projet sandbox - fait
	- Permettre la création de component "behavior" custom - fait
	- Modifier le code du doomlike pour utiliser ces components - en cours
		# Faire le gun en un component à ajouter au joueur
		# Faire les ennemis (le component s'occupe de créer le reste ?)
		# Faire le component enemy count
	- Clean le moteur des classes obsolètes (Object, Lights, Camera, etc.) 
		(+ sans doute bouger la classe Transform et virer le dossier Objects)


== MOYEN TERME ==

~ Faire un éditeur d'assets (utiliser ImGUI pour l'interface)

~ Etendre l'éditeur d'assets pour faire un éditeur de préfab

~ Mettre de meilleurs visuels pour le doomlike en utilisant l'éditeur de prefab


== LONG TERME == (voir lequel de ces trois là est le plus important pour trouver un taff)

~ Mettre des particules (avec ces vidéos ? https://www.youtube.com/watch?v=4YhQJPD7ylQ)

~ Animations 3D : https://ogldev.org/www/tutorial38/tutorial38.html

~ Mettre un éditeur de level à partir de l'éditeur de prefabs


== PROGRAMMATION GRAPHIQUE == (aka j'ai envie mais pas le focus principal (au moins jusqu'à ce que j'ai trouvé un taff))

~ Partie "Advanced OpenGL" de learnopengl.com

~ Partie "Advanced Lighting" de learnopengl.com

~ Partie "PBR Lighting" de learnopengl.com


== TRES LONG TERME == (aka ça sera jamais fait)

~ "Finir" la physique avec la répulsion des collisions body/body (imagine pousser une caisse dans un mur oskour)

~ Mettre un système de physique supportant plus que du AABB

~ Mettre un éditeur complet :skull:


== AUTRES ==

~ Donner la possibilité d'avoir un offset sur les model renderer component (assez ez faudra juste rajouter l'offset à la matrice de l'entity au draw)

~ Compute la direction des Spot Light en fonction de la rotation de l'Entity (avoir une rotation offset ? avoir un vecteur de direction offset ?)

~ Améliorer les textes debug (réduire la taille du texte fps, ajouter la durée de la frame en ms, ajouter textes quand pause & freecam)

~ Finir les sons dans le doomlike (mouvement ennemis, mur qui bouge, lumière qui s'allume)

~ Opti le rendering de texte pour utiliser moins de matrices, générer une matrice transform pour tout le texte et passer les position et scale des char via un vec4 au shader qui se charge de la fin des calculs ?

~ Débloquer la limite de FPS

~ Réussir à intégrer les collisions des sons de FMod

~ Mettre un text renderer component 3D

~ Etudier la question de la physique en fixed timestep (https://gafferongames.com/post/fix_your_timestep)

~ Intégrer des cullings pour le rendering (au moins le frustum culling)

~ Intégrer l'oct-tree pour les collisions

~ Améliorer les draw call: remplacer la liste de model renderer component, la liste de text renderer component, etc. par une liste de draw call avec toutes les infos nécessaires, ce qui permettrait au moins de les trier par shader et par material, ce qui serait beaucoup mieux que maintenant


== REFLEXIONS / PROBLEMES CONNUS ==

~ Pb avec les rigidbodies, ils se collident avec eux même et partent en Y si ils ont un test channel qui les fait collide leur collision, besoin de faire un truc avec le raycast pour les empêcher de se collide eux-même, peut être avoir une autre fonction de raycast AABB uniquement pour ça qui a un fonctionnement un peu différent de celle de base ?

~ Le look at rotation des ennemis du doomlike bug un petit peu ?

~ Y'a toujours des bugs bizarre avec les plateformes mouvantes qui monte (l'ascenseur) quand elle est immobile et qu'on est en train de bouger quand elle commence à grimper (voir si ça a un lien avec le step mechanic)

~ Problème avec la physique, si on touche par le bas une collision qui bouge, on est tp au dessus (j'ai l'impression que ça le fait seulement quand la collision qui bouge est en train de descendre)

~ Réfléchir au fonctionnement du load asset des scenes, est-ce qu'il faudrait faire gaffe à l'utilisation de ram et unload genre les textures qui ne sont plus nécessaires ?

~ Il peut y avoir des problèmes avec la physique notamment dans les coins ou entre des collisions quand on bouge et qu'on spam le saut, genre on est téléporté à travers d'autres collisions. Raison inconnue.